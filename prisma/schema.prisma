datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
    ADMIN
    USER
}

model User {
    id            String        @id @default(cuid())
    name          String?
    email         String?       @unique
    emailVerified DateTime?
    image         String?
    role          Role          @default(USER)
    accounts      Account[]
    sessions      Session[]
    applications  Application[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Application {
    id            String   @id @default(cuid())
    userId        String
    name          String
    latestVersion String
    bannerUrl     String   @default("default.png")
    appToken      String   @default(uuid())
    isPrivate     Boolean  @default(false)
    isBanned      Boolean  @default(false)
    isVerified    Boolean  @default(false)
    isDeprecated  Boolean  @default(false)
    createdAt     DateTime @default(now())
    updatedAt     DateTime @default(now())
    dailyInstalls Int      @default(0)
    totalInstalls Int      @default(0)
    scripts       Script[]
    user          User     @relation(fields: [userId], references: [id])

    @@unique([name, appToken])
}

model Script {
    id            String      @id @default(cuid())
    applicationId String
    version       String
    application   Application @relation(fields: [applicationId], references: [id])
    createdAt     DateTime    @default(now())

    @@unique([version])
}
